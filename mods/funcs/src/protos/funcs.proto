/**
 * MIT License
 * Copyright (c) 2021 Fonoster Inc
 *
 * The Funcs proto contains the artificats for function administration
 * such as creation and deployment.
 */
syntax = "proto3";

package fonoster.funcs.v1beta1;

option go_package = "github.com/fonoster/fonoster/mods/funcs/fonoster/services/protos/funcs";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "common.proto";

service Funcs {
  // Shows a list of user functions
  rpc ListFuncs (ListFuncsRequest) returns (ListFuncsResponse) {
    option (google.api.http) = { get: "/v1beta1/funcs" };
  };
  // Gets a function by name
  rpc GetFunc (GetFuncRequest) returns (Func) {
    option (google.api.http) = { get: "/v1beta1/funcs/{name}" };
  };
  // Orders the functions subsystem to download and deploy a function
  rpc DeployFunc (DeployFuncRequest) returns (stream DeployStream) {};
  // Peforms a hard delete of the function
  rpc DeleteFunc (DeleteFuncRequest) returns (fonoster.common.v1beta1.Empty) {
    option (google.api.http) = { 
      delete: "/v1beta1/funcs/{name}"
    };
  };
  // Gets a stream of logs
  rpc GetFuncLogs (GetFuncLogsRequest) returns (stream FuncLog) {
    option (google.api.http) = { get: "/v1beta1/funcs/{name}/logs" };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200";
        value: {
          description: "Stream of logs";
          schema: {
            json_schema: {
              ref: "FuncLog";
            }
          }
        }
      }
    };    
  };
  // Creates a one time scoped token for access to the registry 
  rpc CreateRegistryToken (CreateRegistryTokenRequest) returns (CreateRegistryTokenResponse);
}

message ListFuncsRequest {
  // The maximum number of items in the list
  int32 page_size = 1;

  // The next_page_token value returned from the previous request, if any
  string page_token = 2;

  // Level of detail of the individual entities
  fonoster.common.v1beta1.View view = 3;
}

message ListFuncsResponse {
  // List of Functions
  repeated Func funcs = 1;
  // Token to retrieve the next page of results, or empty if there are no more results in the list
  string next_page_token = 2;
}

message GetFuncLogsRequest {
  string name = 1;
  // Only return logs after a specific date (RFC3339)
  string since = 2;
  int32 tail = 3;
  bool follow = 4;
}

message GetFuncRequest {
  string name = 1;
  // Requested level of detail
  fonoster.common.v1beta1.View view = 2;
}

message DeployFuncRequest {
  string name = 1;
  string schedule = 2;
  Resource limits = 3;
  Resource requests = 4;
}

message DeleteFuncRequest {
  string name = 1;
}

message CreateRegistryTokenRequest {
  string func_name = 1;
}

message CreateRegistryTokenResponse {
  string token = 1;
  string image = 2;
}

message Func {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"name\": \"testfunc\", \"image\": \"functions/nodeinfo:latest\", \"invocationCount\": 20, \"replicas\": 1, \"availableReplicas\": 1, \"limit\": { \"memory\": \"128M\", \"cpu\": \"0.01\" }, \"requests\": { \"memory\": \"128M\", \"cpu\": \"0.01\" }}"
  };
  string name = 1;
  string image = 2;
  int32 invocation_count = 3;
  int32 replicas = 4;
  int32 available_replicas = 5;
  Resource limits = 6;
  Resource requests = 7;
  string schedule = 8;
}

message Resource {
  string memory = 1;
  string cpu = 2;
}

message FuncLog {
  string name = 1;
  string instance = 2;
  string timestamp = 3;
  string text = 4;
}

message DeployStream {
  string text = 1;
}