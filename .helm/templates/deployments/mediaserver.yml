apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm2.fullname" . }}-mediaserver
  labels:
    app: mediaserver
    {{- include ".helm2.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.mediaserver.replicaCount }}
  strategy:
    type: {{ .Values.mediaserver.strategyType | quote }}
  selector:
    matchLabels:
      {{- include ".helm2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.mediaserver.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: mediaserver
        {{- include ".helm2.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: mediaserver
        image: {{ .Values.mediaserver.image.repository }}:{{ .Values.mediaserver.image.tag }}
        imagePullPolicy: {{ .Values.mediaserver.image.pullPolicy }}
        env:
        - name: EXTERN_ADDR
          value: {{ .Values.mediaserver.externAddr | quote }}
        - name: EXTERN_PORT 
          value: {{ .Values.mediaserver.externPort | quote }}
        # Asterisk will not send outbound registration in K8s unless it has a FQDN
        # As a workaround we simply use the POD's FQND
        - name: SIPPROXY_HOST
          value: {{ include ".helm2.fullname" . }}-sipproxy.{{ .Release.Namespace }}.svc.cluster.local
        - name: SIPPROXY_USERNAME
          value: {{ .Values.mediaserver.proxyUsername | quote }}
        - name: SIPPROXY_SECRET
          value: {{ .Values.mediaserver.proxySecret | quote }}
        - name: ENABLE_TEST_ACCOUNT
          value: "true"
        - name: AGI_URL
          value: agi://{{ include ".helm2.fullname" . }}-mediacontroller
        ports:
        - name: sip
          containerPort: 6060
        - name: rtp1
          containerPort: 30005    
          protocol: UDP     
        - name: rtp2
          containerPort: 30006
          protocol: UDP
        - name: rtp3
          containerPort: 30007
          protocol: UDP
        - name: rtp4
          containerPort: 30008
          protocol: UDP
        volumeMounts:      
        - mountPath: /tmp
          name: recordings
          readOnly: false          
      - name: uploaderhelper
        image: fonoster/uploaderhelper:latest
        imagePullPolicy: Always
        env:
        - name: APISERVER_ENDPOINT
          value: "{{ include ".helm2.fullname" . }}-apiserver:50052"
        - name: EVENTS_BROKERS
          value: amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ printf "%s-%s" .Release.Name .Values.rabbitmq.nameOverride }}:5672           
        volumeMounts:
        - mountPath: /root/.fonoster
          name: fonoster-config
          readOnly: true              
        - mountPath: /data
          name: recordings
          readOnly: false
      volumes:
      - name: fonoster-config
        secret:
          secretName: fonoster-config        
      - name: recordings
        emptyDir: {}
